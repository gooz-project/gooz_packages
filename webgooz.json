{
    "name": "webgooz",
    "codes": [
        {
            "filename": "gooz_web.py",
            "code": "from dev.gooz_wlan import *pkglineflagimport socketpkglineflagpkglineflagpkglineflagdef wifi_control():pkglineflag    if sta_if.active() == False:pkglineflag        print(\"no active wlan...\")pkglineflag        wifi_conn_flag = Falsepkglineflag    else:pkglineflag        if sta_if.isconnected() == False:pkglineflag            print(\"no wifi connection...\")pkglineflag            wifi_conn_flag = Falsepkglineflag        else:pkglineflag            print(\"wifi connected...\")pkglineflag            wifi_conn_flag = Truepkglineflag            pkglineflag    return wifi_conn_flagpkglineflag            pkglineflags = socket.socket(socket.AF_INET,socket.SOCK_STREAM)#initin icinden buraya ald\u0131m    pkglineflagdef init(port):#socket initializerpkglineflag    print(\"Server initializing...\")pkglineflag    addr = socket.getaddrinfo('0.0.0.0', int(port))[0][-1]pkglineflag    print(\"Address has been taken\")pkglineflag    pkglineflag    s.bind(addr)pkglineflag    print(\"Socket and address have been binded\")pkglineflag    s.listen(1)pkglineflag    pkglineflag    pkglineflag    pkglineflagdef new_client():pkglineflag    try:pkglineflag        pkglineflag        s.settimeout(1.0)pkglineflag        cl, addr = s.accept()pkglineflag        print('client connected from', addr)pkglineflag        cl_file = cl.makefile('rwb', 0)pkglineflag        line = str(cl_file.recv(1024*8),\"utf-8\").split(\"\\n\")pkglineflag        request_type = line[0].split(\" \")pkglineflag        if request_type[0] == \"GET\":pkglineflag            if request_type[1] == \"/hello\":pkglineflag                response = \"<h1>Hello Main Page</h1>\"pkglineflag                cl.send('HTTP/1.0 200 OK\\r\\nContent-type: text/html\\r\\n\\r\\n')pkglineflag                cl.send(response)pkglineflag            elif request_type[1] == \"/host\":pkglineflag                response = \"<h1>\"+line[1]+\"</h1>\"pkglineflag                cl.send('HTTP/1.0 200 OK\\r\\nContent-type: text/html\\r\\n\\r\\n')pkglineflag                cl.send(response)pkglineflag            elif request_type[1] == \"/stop\":pkglineflag                cl.closepkglineflag                break_flag = Truepkglineflag            else:pkglineflag                \"\"\"pkglineflag                rows = ['<tr><td>%s</td><td>%d</td></tr>' % (str(p), p.value()) for p in pins]pkglineflag                response = html % '\\n'.join(rows)pkglineflag                \"\"\"pkglineflag                response = \"<h1>Herhangi bir subdirectory girilmedi</h1>\"pkglineflag                cl.send('HTTP/1.0 200 OK\\r\\nContent-type: text/html\\r\\n\\r\\n')pkglineflag                cl.send(response)pkglineflag        cl.close()pkglineflag        return break_flagpkglineflag        pkglineflag    except:pkglineflag        passpkglineflag    pkglineflagdef run(port):pkglineflag    if wifi_control() == False:pkglineflag        print(\"no wifi connection...\")pkglineflag    else:pkglineflag        print(\"Server initializing...\")pkglineflag        init(port)pkglineflag        while True:pkglineflag            new_client()pkglineflag            if new_client() == True:pkglineflag                breakpkglineflagdef run2():pkglineflag    addr = socket.getaddrinfo('0.0.0.0', 8080)[0][-1]pkglineflag    s = socket.socket()pkglineflag    s.bind(addr)pkglineflag    s.listen(1)pkglineflag    #s.settimeout(1.0)pkglineflag    \"\"\"pkglineflag    def new_client():pkglineflag        cl, addr = s.accept()pkglineflag        print(\"Data al\u0131nd\u0131\")pkglineflag        print('client connected from', addr)pkglineflag        cl_file = cl.makefile('rwb', 0)pkglineflag        print(\"makefile olu\u015fturuldu\")pkglineflag        line = str(cl_file.recv(1024*8),\"utf-8\").split(\"\\n\")pkglineflag        request_type = line[0].split(\" \")pkglineflag        if request_type[0] == \"GET\":pkglineflag            if request_type[1] == \"/hello\":pkglineflag                response = \"<h1>Hello Main Page</h1>\"pkglineflag                cl.send('HTTP/1.0 200 OK\\r\\nContent-type: text/html\\r\\n\\r\\n')pkglineflag                cl.send(response)pkglineflag            elif request_type[1] == \"/host\":pkglineflag                response = \"<h1>\"+line[1]+\"</h1>\"pkglineflag                cl.send('HTTP/1.0 200 OK\\r\\nContent-type: text/html\\r\\n\\r\\n')pkglineflag                cl.send(response)pkglineflag            else:pkglineflag                rows = ['<tr><td>%s</td><td>%d</td></tr>' % (str(p), p.value()) for p in pins]pkglineflag                response = html % '\\n'.join(rows)pkglineflag                cl.send('HTTP/1.0 200 OK\\r\\nContent-type: text/html\\r\\n\\r\\n')pkglineflag                cl.send(response)pkglineflag        cl.close()pkglineflag    \"\"\"pkglineflagpkglineflagpkglineflag    while True:pkglineflag        cl, addr = s.accept()pkglineflag        print(\"Data al\u0131nd\u0131\")pkglineflag        print('client connected from', addr)pkglineflag        cl_file = cl.makefile('rwb', 0)pkglineflag        print(\"makefile olu\u015fturuldu\")pkglineflag        line = str(cl_file.recv(1024*8),\"utf-8\").split(\"\\n\")pkglineflag        request_type = line[0].split(\" \")pkglineflag        if request_type[0] == \"GET\":pkglineflag            if request_type[1] == \"/hello\":pkglineflag                response = \"<h1>Hello Main Page</h1>\"pkglineflag                cl.send('HTTP/1.0 200 OK\\r\\nContent-type: text/html\\r\\n\\r\\n')pkglineflag                cl.send(response)pkglineflag            elif request_type[1] == \"/host\":pkglineflag                response = \"<h1>\"+line[1]+\"</h1>\"pkglineflag                cl.send('HTTP/1.0 200 OK\\r\\nContent-type: text/html\\r\\n\\r\\n')pkglineflag                cl.send(response)pkglineflag            else:pkglineflag                \"\"\"pkglineflag                rows = ['<tr><td>%s</td><td>%d</td></tr>' % (str(p), p.value()) for p in pins]pkglineflag                response = html % '\\n'.join(rows)pkglineflag                \"\"\"pkglineflag                response = \"(: <h1>Welcome to the open source gooz project server :)</h1>\"pkglineflag                cl.send('HTTP/1.0 200 OK\\r\\nContent-type: text/html\\r\\n\\r\\n')pkglineflag                cl.send(response)pkglineflag        cl.close()pkglineflagpkglineflagpkglineflagpkglineflagpkglineflagpkglineflag    pkglineflagpkglineflagpkglineflag"
        }
    ],
    "managersnip": "\\n    elif cmd_arr[0] == \"webgooz\":\\n        try:\\n            import app.webgooz.gooz_web    \\n            if cmd_arr[1] == \"run\":\\n                app.webgooz.gooz_web.run(cmd_arr[2])\\n            elif cmd_arr[1] == \"control\":\\n                app.webgooz.gooz_web.wifi_control()\\n        except:\\n            print('This app is deleted')\\n"
}